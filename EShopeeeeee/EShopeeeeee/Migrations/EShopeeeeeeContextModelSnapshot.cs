// <auto-generated />
using System;
using EShopeeeeee.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EShopeeeeee.Migrations
{
    [DbContext(typeof(EShopeeeeeeContext))]
    partial class EShopeeeeeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EShopeeeeee.Models.Accounts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avartar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Carts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountIdid")
                        .HasColumnType("int");

                    b.Property<int?>("ProductIdId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AccountIdid");

                    b.HasIndex("ProductIdId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("EShopeeeeee.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InvoiceIdId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductIdId")
                        .HasColumnType("int");

                    b.Property<int>("Quanlity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceIdId");

                    b.HasIndex("ProductIdId");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Invoices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accountldid")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Accountldid");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("EShopeeeeee.Models.ProductTypes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Stratus")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("ProductTypeIdid")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeIdid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Carts", b =>
                {
                    b.HasOne("EShopeeeeee.Models.Accounts", "AccountId")
                        .WithMany("Carts")
                        .HasForeignKey("AccountIdid");

                    b.HasOne("EShopeeeeee.Models.Products", "ProductId")
                        .WithMany("Carts")
                        .HasForeignKey("ProductIdId");

                    b.Navigation("AccountId");

                    b.Navigation("ProductId");
                });

            modelBuilder.Entity("EShopeeeeee.Models.InvoiceDetail", b =>
                {
                    b.HasOne("EShopeeeeee.Models.Invoices", "InvoiceId")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("InvoiceIdId");

                    b.HasOne("EShopeeeeee.Models.Products", "ProductId")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("ProductIdId");

                    b.Navigation("InvoiceId");

                    b.Navigation("ProductId");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Invoices", b =>
                {
                    b.HasOne("EShopeeeeee.Models.Accounts", "Accountld")
                        .WithMany("Invoices")
                        .HasForeignKey("Accountldid");

                    b.Navigation("Accountld");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Products", b =>
                {
                    b.HasOne("EShopeeeeee.Models.ProductTypes", "ProductTypeId")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeIdid");

                    b.Navigation("ProductTypeId");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Accounts", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Invoices", b =>
                {
                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("EShopeeeeee.Models.ProductTypes", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EShopeeeeee.Models.Products", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("InvoiceDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
